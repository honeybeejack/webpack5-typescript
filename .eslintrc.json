{
  "env": {
    "browser": true,
    "es6": true
  },
  "extends": [
    "eslint:recommended",
    "airbnb/hooks",
    "airbnb-typescript",
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:prettier/recommended",
    "plugin:import/recommended"
  ],
  // Specifying Parser
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "project": [
      "./tsconfig.json"
    ],
    "sourceType": "module",
    "tsconfigRootDir": "."
  },
  // Configuring third-party plugins
  "plugins": [
    "react",
    "@typescript-eslint"
  ],
  "rules": {
    "@typescript-eslint/ban-types": [
      "error",
      {
        "extendDefaults": true,
        "types": {
          "{}": false
        }
      }
    ],
    // Disallow the `any` type.
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-unused-vars": "warn",
    "linebreak-style": "off",
    "no-console": "off",
    "no-restricted-syntax": [
        "error",
        {
            "selector": "CallExpression[callee.object.name='console'][callee.property.name!=/^(log|warn|error|info|trace)$/]",
            "message": "Unexpected property on console object was called"
        }
    ],
    "no-unused-vars": "off",
    // Enforce the use of the shorthand syntax.
    "object-shorthand": "error",
    // Configure prettier
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "lf",
        "indentStyle": "space",
        "printWidth": 80,
        "singleQuote": true,
        "tabWidth": 2,
        "useTabs": true
      }
    ],
    "react-hooks/exhaustive-deps": "off"
  },
  // Resolve imports
  "settings": {
    "import/resolver": {
      "typescript": {
        "project": "./tsconfig.json"
      }
    },
    "react": {
      "version": "18.x"
    }
  }
}